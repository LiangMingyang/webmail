// Generated by CoffeeScript 1.9.3
(function() {
  var HOME_PAGE, sequelize;

  sequelize = require('sequelize');

  HOME_PAGE = '/';

  exports.postList = function(req, res) {
    return global.db.Promise.resolve().then(function() {
      var User;
      User = global.db.models.user;
      if (req.session.user) {
        return User.findById(req.session.user.id);
      }
    }).then(function(user) {
      var Outbox, base, base1, base2;
      if (!user) {
        throw new global.myError.UnknownUser();
      }
      Outbox = global.db.models.outbox;
      if ((base = req.body).offset == null) {
        base.offset = 0;
      }
      if ((base1 = req.body).limit == null) {
        base1.limit = 20;
      }
      if ((base2 = req.body).lastMail == null) {
        base2.lastMail = 0;
      }
      return Outbox.findAndCountAll({
        where: (function() {
          switch (user.privilege) {
            case 'admin':
              return {
                id: {
                  $gt: req.body.lastMail
                }
              };
            case 'auditor':
              return {
                id: {
                  $gt: req.body.lastMail
                },
                auditorId: {
                  $or: [null, user.id]
                }
              };
            case 'consumer':
              return {
                id: {
                  $gt: req.body.lastMail
                },
                consumerId: {
                  $or: [null, user.id]
                }
              };
            default:
              return {
                id: null
              };
          }
        })(),
        offset: req.body.offset,
        limit: req.body.limit
      });
    }).then(function(result) {
      return res.json({
        status: 1,
        msg: 'Success',
        mails: result.rows,
        count: result.count
      });
    })["catch"](global.myError.UnknownUser, function(err) {
      return res.json({
        status: 0,
        msg: err.message
      });
    })["catch"](function(err) {
      console.log(err);
      return res.redirect(HOME_PAGE);
    });
  };

  exports.postDetail = function(req, res) {
    return global.db.Promise.resolve().then(function() {
      var User;
      User = global.db.models.user;
      if (req.session.user) {
        return User.findById(req.session.user.id);
      }
    }).then(function(user) {
      var Outbox, base;
      if (!user) {
        throw new global.myError.UnknownUser();
      }
      Outbox = global.db.models.outbox;
      if ((base = req.body).mail == null) {
        base.mail = null;
      }
      return Outbox.find({
        where: (function() {
          switch (user.privilege) {
            case 'admin':
              return {
                id: req.body.mail
              };
            case 'auditor':
              return {
                id: req.body.mail,
                auditorId: {
                  $or: [null, user.id]
                }
              };
            case 'consumer':
              return {
                id: req.body.mail,
                consumerId: {
                  $or: [null, user.id]
                }
              };
            case 'dispatcher':
              return {
                id: null
              };
          }
        })()
      });
    }).then(function(mail) {
      if (!mail) {
        throw new global.myError.UnknownMail();
      }
      return res.json({
        status: 1,
        msg: 'Success',
        mail: mail
      });
    })["catch"](global.myError.UnknownUser, global.myError.UnknownMail, function(err) {
      return res.json({
        status: 0,
        msg: err.message
      });
    })["catch"](function(err) {
      console.log(err);
      return res.redirect(HOME_PAGE);
    });
  };

  exports.postAudit = function(req, res) {
    var currentMail;
    currentMail = void 0;
    return global.db.Promise.resolve().then(function() {
      var User;
      User = global.db.models.user;
      if (req.session.user) {
        return User.findById(req.session.user.id);
      }
    }).then(function(user) {
      var Outbox;
      if (!user) {
        throw new global.myError.UnknownUser();
      }
      Outbox = global.db.models.outbox;
      return Outbox.findById(req.body.mail);
    }).then(function(mail) {
      if (!mail) {
        throw new global.myError.UnknownMail();
      }
      if (mail.status !== 'handled') {
        throw new global.myError.InvalidAccess();
      }
      switch (req.body.result) {
        case '1':
          mail.status = 'audited';
          break;
        case '0':
          mail.status = 'failed';
      }
      if (mail.reason == null) {
        mail.reason = "";
      }
      mail.reason += req.body.reason;
      mail.auditor = req.session.id;
      return mail.save();
    }).then(function(mail) {
      currentMail = mail;
      return mail.getReplyTo();
    }).then(function(replyTo) {
      if (!replyTo) {
        return void 0;
      }
      if (replyTo.status !== 'handled') {
        throw new global.myError.InvalidAccess();
      }
      if (req.body.result === '0') {
        replyTo.status = 'assigned';
        return replyTo.save();
      }
    }).then(function() {
      return res.json({
        status: 1,
        mail: currentMail,
        msg: 'Success'
      });
    })["catch"](global.myError.InvalidAccess, global.myError.UnknownUser, global.myError.UnknownMail, function(err) {
      return res.json({
        status: 0,
        msg: err.message
      });
    })["catch"](function(err) {
      console.log(err);
      return res.redirect(HOME_PAGE);
    });
  };

}).call(this);

//# sourceMappingURL=controller.js.map
